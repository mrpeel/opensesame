function pBKDF2(password,salt,numIterations,keyLength){"use strict";if(assert(""!==password,"PBKDF2 password: "+password),assert(""!==salt,"PBKDF2 salt: "+salt),assert("number"==typeof numIterations,"PBKDF2 numIterations: "+numIterations),assert("number"==typeof keyLength,"PBKDF2 keyLength: "+keyLength),window.crypto&&window.crypto.subtle){let cryptoTextEncoder=new TextEncoder("utf-8"),saltBuffer=cryptoTextEncoder.encode(salt),passwordBuffer=cryptoTextEncoder.encode(password);return window.crypto.subtle.importKey("raw",passwordBuffer,{name:"PBKDF2"},!1,["deriveBits"]).then(function(key){return window.crypto.subtle.deriveBits({name:"PBKDF2",iterations:numIterations,salt:saltBuffer,hash:"SHA-1"},key,keyLength)})}return new Promise(function(resolve,reject){let derivedKey=CryptoJS.PBKDF2(password,salt,{iterations:numIterations,keySize:keyLength/32});resolve(derivedKey)})}function hMACSHA256(plainText,key){"use strict";return window.crypto&&window.crypto.subtle?new Promise(function(resolve,reject){let cryptoTextEncoder=new TextEncoder("utf-8"),plainTextBuffer=cryptoTextEncoder.encode(plainText);window.crypto.subtle.importKey("raw",key,{name:"HMAC",hash:{name:"SHA-256"}},!1,["sign"]).then(function(importedKey){return window.crypto.subtle.sign({name:"HMAC",hash:{name:"SHA-256"}},importedKey,plainTextBuffer)}).then(function(mac){let macArray=new Uint8Array(mac);resolve(macArray)})}):new Promise(function(resolve,reject){let mac=CryptoJS.HmacSHA256(plainText,key),macArray=convertWordArrayToUint8Array(mac);resolve(macArray)})}function aesEncrypt(plainText,key){"use strict";return window.crypto&&window.crypto.subtle?new Promise(function(resolve,reject){let cryptoTextEncoder=new TextEncoder("utf-8"),plainTextBuffer=cryptoTextEncoder.encode(plainText),aesKey=convertHexToUint8Array(key),iv=window.crypto.getRandomValues(new Uint8Array(16));window.crypto.subtle.importKey("raw",aesKey,{name:"AES-CBC",length:128},!1,["encrypt"]).then(function(importedKey){return window.crypto.subtle.encrypt({name:"AES-CBC",iv:iv},importedKey,plainTextBuffer)}).then(function(encryptedData){let encryptedArray=new Uint8Array(encryptedData);resolve({iv:iv,ciphertext:encryptedArray})})}):new Promise(function(resolve,reject){let encrypted=CryptoJS.AES.encrypt(plainText,key);resolve(encrypted)})}function aesDecrypt(encryptedData,key){"use strict";return window.crypto&&window.crypto.subtle?new Promise(function(resolve,reject){let cryptoTextDecoder=new TextDecoder("utf-8"),aesKey=convertHexToUint8Array(key);window.crypto.subtle.importKey("raw",aesKey,{name:"AES-CBC",length:128},!1,["decrypt"]).then(function(importedKey){return window.crypto.subtle.decrypt({name:"AES-CBC",iv:encryptedData.iv},importedKey,encryptedData.ciphertext)}).then(function(decryptedData){let decryptedArray=new Uint8Array(decryptedData),plainText=cryptoTextDecoder.decode(decryptedArray);resolve(plainText)})}):new Promise(function(resolve,reject){let decrypted=CryptoJS.AES.decrypt(encyptedData,key),plainText=CryptoJS.enc.Utf8.stringify(decrypted);resolve(plainText)})}function convertDerivedKeyToHex(derivedKey){"use strict";return convertUint8ArrayToHex(window.crypto&&window.crypto.subtle?new Uint8Array(derivedKey):convertWordArrayToUint8Array(derivedKey))}function convertWordArrayToHex(wordArray){"use strict";return convertUint8ArrayToHex(convertWordArrayToUint8Array(wordArray))}function convertWordArrayToUint8Array(wordArray){"use strict";let words=wordArray.words,sigBytes=wordArray.sigBytes,u8=new Uint8Array(sigBytes);for(let i=0;i<sigBytes;i++){let byte=words[i>>>2]>>>24-i%4*8&255;u8[i]=byte}return u8}function convertUint8ArrayToHex(u8Array){let i,len,c,hex="";for(i=0,len=u8Array.length;i<len;i+=1)c=u8Array[i].toString(16),c.length<2&&(c="0"+c),hex+=c;return hex}function convertHexToUint8Array(hex){let i,arr,byteLen=hex.length/2,j=0;if(byteLen!==parseInt(byteLen,10))throw new Error("Invalid hex length "+hex.length);for(arr=new Uint8Array(byteLen),i=0;i<byteLen;i+=1)arr[i]=parseInt(hex[j]+hex[j+1],16),j+=2;return arr}function zeroVar(varToZero){return Array(varToZero.length).join("0")}function zeroIntArray(arrayToZero){let holdingVal=arrayToZero;for(let aCounter=0;aCounter<arrayToZero.length;aCounter++)holdingVal[aCounter]=0;return holdingVal}window.pBKDF2=pBKDF2,window.HMACSHA256=hMACSHA256,window.aesEncrypt=aesEncrypt,window.aesDecrypt=aesDecrypt,window.convertDerivedKeyToHex=convertDerivedKeyToHex,window.convertWordArrayToHex=convertWordArrayToHex,window.convertWordArrayToUint8Array=convertWordArrayToUint8Array,window.convertUint8ArrayToHex=convertUint8ArrayToHex,window.convertHexToUint8Array=convertHexToUint8Array,window.zeroVar=zeroVar,window.zeroIntArray=zeroIntArray;